// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync-message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sync-message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class SyncMessage_SizeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncMessage_Size>
     _instance;
} _SyncMessage_Size_default_instance_;
class SyncMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncMessage>
     _instance;
} _SyncMessage_default_instance_;

namespace protobuf_sync_2dmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage_Size, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage_Size, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage_Size, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, displaysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, screensize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, hasnavbar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, screenshot_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SyncMessage_Size)},
  { 7, -1, sizeof(SyncMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncMessage_Size_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sync-message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SyncMessage_Size_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncMessage_Size_default_instance_);_SyncMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncMessage_default_instance_);_SyncMessage_default_instance_._instance.get_mutable()->displaysize_ = const_cast< ::SyncMessage_Size*>(
      ::SyncMessage_Size::internal_default_instance());
  _SyncMessage_default_instance_._instance.get_mutable()->screensize_ = const_cast< ::SyncMessage_Size*>(
      ::SyncMessage_Size::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022sync-message.proto\"\241\001\n\013SyncMessage\022&\n\013"
      "displaySize\030\001 \001(\0132\021.SyncMessage.Size\022%\n\n"
      "screenSize\030\002 \001(\0132\021.SyncMessage.Size\022\021\n\th"
      "asNavBar\030\003 \001(\010\022\022\n\nscreenshot\030\004 \001(\014\032\034\n\004Si"
      "ze\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005B\030\n\013com.zf.syncB"
      "\tSyncPhoneb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync-message.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sync_2dmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncMessage_Size::kXFieldNumber;
const int SyncMessage_Size::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncMessage_Size::SyncMessage_Size()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sync_2dmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SyncMessage.Size)
}
SyncMessage_Size::SyncMessage_Size(const SyncMessage_Size& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:SyncMessage.Size)
}

void SyncMessage_Size::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

SyncMessage_Size::~SyncMessage_Size() {
  // @@protoc_insertion_point(destructor:SyncMessage.Size)
  SharedDtor();
}

void SyncMessage_Size::SharedDtor() {
}

void SyncMessage_Size::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMessage_Size::descriptor() {
  protobuf_sync_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sync_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncMessage_Size& SyncMessage_Size::default_instance() {
  protobuf_sync_2dmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncMessage_Size* SyncMessage_Size::New(::google::protobuf::Arena* arena) const {
  SyncMessage_Size* n = new SyncMessage_Size;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncMessage_Size::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncMessage.Size)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool SyncMessage_Size::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SyncMessage.Size)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SyncMessage.Size)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SyncMessage.Size)
  return false;
#undef DO_
}

void SyncMessage_Size::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SyncMessage.Size)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SyncMessage.Size)
}

::google::protobuf::uint8* SyncMessage_Size::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SyncMessage.Size)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncMessage.Size)
  return target;
}

size_t SyncMessage_Size::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncMessage.Size)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMessage_Size::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SyncMessage.Size)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncMessage_Size* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncMessage_Size>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SyncMessage.Size)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SyncMessage.Size)
    MergeFrom(*source);
  }
}

void SyncMessage_Size::MergeFrom(const SyncMessage_Size& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SyncMessage.Size)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void SyncMessage_Size::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SyncMessage.Size)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMessage_Size::CopyFrom(const SyncMessage_Size& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncMessage.Size)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMessage_Size::IsInitialized() const {
  return true;
}

void SyncMessage_Size::Swap(SyncMessage_Size* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncMessage_Size::InternalSwap(SyncMessage_Size* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncMessage_Size::GetMetadata() const {
  protobuf_sync_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sync_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncMessage_Size

// int32 x = 1;
void SyncMessage_Size::clear_x() {
  x_ = 0;
}
::google::protobuf::int32 SyncMessage_Size::x() const {
  // @@protoc_insertion_point(field_get:SyncMessage.Size.x)
  return x_;
}
void SyncMessage_Size::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:SyncMessage.Size.x)
}

// int32 y = 2;
void SyncMessage_Size::clear_y() {
  y_ = 0;
}
::google::protobuf::int32 SyncMessage_Size::y() const {
  // @@protoc_insertion_point(field_get:SyncMessage.Size.y)
  return y_;
}
void SyncMessage_Size::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:SyncMessage.Size.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncMessage::kDisplaySizeFieldNumber;
const int SyncMessage::kScreenSizeFieldNumber;
const int SyncMessage::kHasNavBarFieldNumber;
const int SyncMessage::kScreenshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncMessage::SyncMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sync_2dmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SyncMessage)
}
SyncMessage::SyncMessage(const SyncMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.screenshot().size() > 0) {
    screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
  }
  if (from.has_displaysize()) {
    displaysize_ = new ::SyncMessage_Size(*from.displaysize_);
  } else {
    displaysize_ = NULL;
  }
  if (from.has_screensize()) {
    screensize_ = new ::SyncMessage_Size(*from.screensize_);
  } else {
    screensize_ = NULL;
  }
  hasnavbar_ = from.hasnavbar_;
  // @@protoc_insertion_point(copy_constructor:SyncMessage)
}

void SyncMessage::SharedCtor() {
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&displaysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasnavbar_) -
      reinterpret_cast<char*>(&displaysize_)) + sizeof(hasnavbar_));
  _cached_size_ = 0;
}

SyncMessage::~SyncMessage() {
  // @@protoc_insertion_point(destructor:SyncMessage)
  SharedDtor();
}

void SyncMessage::SharedDtor() {
  screenshot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete displaysize_;
  if (this != internal_default_instance()) delete screensize_;
}

void SyncMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMessage::descriptor() {
  protobuf_sync_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sync_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncMessage& SyncMessage::default_instance() {
  protobuf_sync_2dmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncMessage* SyncMessage::New(::google::protobuf::Arena* arena) const {
  SyncMessage* n = new SyncMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screenshot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && displaysize_ != NULL) {
    delete displaysize_;
  }
  displaysize_ = NULL;
  if (GetArenaNoVirtual() == NULL && screensize_ != NULL) {
    delete screensize_;
  }
  screensize_ = NULL;
  hasnavbar_ = false;
  _internal_metadata_.Clear();
}

bool SyncMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SyncMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SyncMessage.Size displaySize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_displaysize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SyncMessage.Size screenSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_screensize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hasNavBar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnavbar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes screenshot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_screenshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SyncMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SyncMessage)
  return false;
#undef DO_
}

void SyncMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SyncMessage.Size displaySize = 1;
  if (this->has_displaysize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->displaysize_, output);
  }

  // .SyncMessage.Size screenSize = 2;
  if (this->has_screensize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->screensize_, output);
  }

  // bool hasNavBar = 3;
  if (this->hasnavbar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->hasnavbar(), output);
  }

  // bytes screenshot = 4;
  if (this->screenshot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->screenshot(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SyncMessage)
}

::google::protobuf::uint8* SyncMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SyncMessage.Size displaySize = 1;
  if (this->has_displaysize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->displaysize_, deterministic, target);
  }

  // .SyncMessage.Size screenSize = 2;
  if (this->has_screensize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->screensize_, deterministic, target);
  }

  // bool hasNavBar = 3;
  if (this->hasnavbar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->hasnavbar(), target);
  }

  // bytes screenshot = 4;
  if (this->screenshot().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->screenshot(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncMessage)
  return target;
}

size_t SyncMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes screenshot = 4;
  if (this->screenshot().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->screenshot());
  }

  // .SyncMessage.Size displaySize = 1;
  if (this->has_displaysize()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->displaysize_);
  }

  // .SyncMessage.Size screenSize = 2;
  if (this->has_screensize()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->screensize_);
  }

  // bool hasNavBar = 3;
  if (this->hasnavbar() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SyncMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SyncMessage)
    MergeFrom(*source);
  }
}

void SyncMessage::MergeFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.screenshot().size() > 0) {

    screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
  }
  if (from.has_displaysize()) {
    mutable_displaysize()->::SyncMessage_Size::MergeFrom(from.displaysize());
  }
  if (from.has_screensize()) {
    mutable_screensize()->::SyncMessage_Size::MergeFrom(from.screensize());
  }
  if (from.hasnavbar() != 0) {
    set_hasnavbar(from.hasnavbar());
  }
}

void SyncMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMessage::CopyFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMessage::IsInitialized() const {
  return true;
}

void SyncMessage::Swap(SyncMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncMessage::InternalSwap(SyncMessage* other) {
  using std::swap;
  screenshot_.Swap(&other->screenshot_);
  swap(displaysize_, other->displaysize_);
  swap(screensize_, other->screensize_);
  swap(hasnavbar_, other->hasnavbar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncMessage::GetMetadata() const {
  protobuf_sync_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sync_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncMessage

// .SyncMessage.Size displaySize = 1;
bool SyncMessage::has_displaysize() const {
  return this != internal_default_instance() && displaysize_ != NULL;
}
void SyncMessage::clear_displaysize() {
  if (GetArenaNoVirtual() == NULL && displaysize_ != NULL) delete displaysize_;
  displaysize_ = NULL;
}
const ::SyncMessage_Size& SyncMessage::displaysize() const {
  const ::SyncMessage_Size* p = displaysize_;
  // @@protoc_insertion_point(field_get:SyncMessage.displaySize)
  return p != NULL ? *p : *reinterpret_cast<const ::SyncMessage_Size*>(
      &::_SyncMessage_Size_default_instance_);
}
::SyncMessage_Size* SyncMessage::mutable_displaysize() {
  
  if (displaysize_ == NULL) {
    displaysize_ = new ::SyncMessage_Size;
  }
  // @@protoc_insertion_point(field_mutable:SyncMessage.displaySize)
  return displaysize_;
}
::SyncMessage_Size* SyncMessage::release_displaysize() {
  // @@protoc_insertion_point(field_release:SyncMessage.displaySize)
  
  ::SyncMessage_Size* temp = displaysize_;
  displaysize_ = NULL;
  return temp;
}
void SyncMessage::set_allocated_displaysize(::SyncMessage_Size* displaysize) {
  delete displaysize_;
  displaysize_ = displaysize;
  if (displaysize) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SyncMessage.displaySize)
}

// .SyncMessage.Size screenSize = 2;
bool SyncMessage::has_screensize() const {
  return this != internal_default_instance() && screensize_ != NULL;
}
void SyncMessage::clear_screensize() {
  if (GetArenaNoVirtual() == NULL && screensize_ != NULL) delete screensize_;
  screensize_ = NULL;
}
const ::SyncMessage_Size& SyncMessage::screensize() const {
  const ::SyncMessage_Size* p = screensize_;
  // @@protoc_insertion_point(field_get:SyncMessage.screenSize)
  return p != NULL ? *p : *reinterpret_cast<const ::SyncMessage_Size*>(
      &::_SyncMessage_Size_default_instance_);
}
::SyncMessage_Size* SyncMessage::mutable_screensize() {
  
  if (screensize_ == NULL) {
    screensize_ = new ::SyncMessage_Size;
  }
  // @@protoc_insertion_point(field_mutable:SyncMessage.screenSize)
  return screensize_;
}
::SyncMessage_Size* SyncMessage::release_screensize() {
  // @@protoc_insertion_point(field_release:SyncMessage.screenSize)
  
  ::SyncMessage_Size* temp = screensize_;
  screensize_ = NULL;
  return temp;
}
void SyncMessage::set_allocated_screensize(::SyncMessage_Size* screensize) {
  delete screensize_;
  screensize_ = screensize;
  if (screensize) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SyncMessage.screenSize)
}

// bool hasNavBar = 3;
void SyncMessage::clear_hasnavbar() {
  hasnavbar_ = false;
}
bool SyncMessage::hasnavbar() const {
  // @@protoc_insertion_point(field_get:SyncMessage.hasNavBar)
  return hasnavbar_;
}
void SyncMessage::set_hasnavbar(bool value) {
  
  hasnavbar_ = value;
  // @@protoc_insertion_point(field_set:SyncMessage.hasNavBar)
}

// bytes screenshot = 4;
void SyncMessage::clear_screenshot() {
  screenshot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SyncMessage::screenshot() const {
  // @@protoc_insertion_point(field_get:SyncMessage.screenshot)
  return screenshot_.GetNoArena();
}
void SyncMessage::set_screenshot(const ::std::string& value) {
  
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SyncMessage.screenshot)
}
#if LANG_CXX11
void SyncMessage::set_screenshot(::std::string&& value) {
  
  screenshot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncMessage.screenshot)
}
#endif
void SyncMessage::set_screenshot(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncMessage.screenshot)
}
void SyncMessage::set_screenshot(const void* value, size_t size) {
  
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncMessage.screenshot)
}
::std::string* SyncMessage::mutable_screenshot() {
  
  // @@protoc_insertion_point(field_mutable:SyncMessage.screenshot)
  return screenshot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SyncMessage::release_screenshot() {
  // @@protoc_insertion_point(field_release:SyncMessage.screenshot)
  
  return screenshot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncMessage::set_allocated_screenshot(::std::string* screenshot) {
  if (screenshot != NULL) {
    
  } else {
    
  }
  screenshot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenshot);
  // @@protoc_insertion_point(field_set_allocated:SyncMessage.screenshot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
